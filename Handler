package com.Lukas.Mario.Window;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.LinkedList;

import com.Lukas.Mario.platformer.framework.GameObject;
import com.Lukas.Mario.platformer.framework.ObjectId;
import com.Lukas.Mario.platformer.objects.Block;
import com.Lukas.Mario.platformer.objects.Coin;
import com.Lukas.Mario.platformer.objects.DeathBlock;
import com.Lukas.Mario.platformer.objects.Flag;
import com.Lukas.Mario.platformer.objects.Goomba;
import com.Lukas.Mario.platformer.objects.InfoBlock;
import com.Lukas.Mario.platformer.objects.Player;

public class Handler {
	
	public LinkedList<GameObject> object = new LinkedList<GameObject>();
	
	private GameObject tempObject;
	
	private Camera cam;
	
	private BufferedImage level2 = null;
	
	public Handler(Camera cam) {
		this.cam = cam;
		
	BufferedImageLoader loader = new BufferedImageLoader();
	level2 = loader.loadImage("/level1.png"); // loads the png for level 1
	
	}
	
	public void tick() {
		for(int i = 0; i < object.size(); i++) {
			tempObject = object.get(i);
	
			tempObject.tick(object);
		}
	}
	
	public void render(Graphics g) {
			for(int i = 0; i < object.size(); i++) {
				tempObject = object.get(i);
				
				tempObject.render(g);
			}
	}
	
	public void LoadImageLevel(BufferedImage image) {
		int h = image.getHeight(); 
		int w = image.getWidth();
		
		System.out.println("width, height: " + w + " " + h);
		
		for(int xx = 0; xx < w; xx++) {
			for(int yy = 0; yy < h; yy++) { // loop trough every single pixel in the loaded image
				int pixel = image.getRGB(xx, yy);
				int red = (pixel >> 16) & 0xff;
				int green = (pixel >> 8) & 0xff;
				int blue = (pixel) & 0xff;
				// finds the RGB level of every pixel
				if(red == 255 && green == 255 && blue == 255)  addObject(new Block(xx*32, yy*32, 0, ObjectId.Block)); // replaces white pixels with dirt
				if(red == 64 && green == 64 && blue == 64)  addObject(new Block(xx*32, yy*32, 1, ObjectId.Block)); // replaces grey pixels with grass
				if(red == 0 && green == 255 && blue == 255)  addObject(new Block(xx*32, yy*32, 2, ObjectId.Block)); // replaces turquoise with 
				if(red == 0 && green == 38 && blue == 255)  addObject(new Block(xx*32, yy*32, 3, ObjectId.Block)); // replaces dark blue with 
				if(red == 178 && green == 0 && blue == 255)  addObject(new Block(xx*32, yy*32, 4, ObjectId.Block)); //replaces magenta pixels right end of platform
				
				if(red == 125 && green == 0 && blue == 55)  addObject(new InfoBlock(xx*32, yy*32, 5, ObjectId.InfoBlock)); // replaces bordeaux with "info block"
				
				if(red == 255 && green == 0 && blue == 0) addObject(new DeathBlock(xx*32, yy*32, 0, ObjectId.DeathBlock)); // replaces red with
				if(red == 0 && green == 255 && blue == 0) addObject(new DeathBlock(xx*32, yy*32, 1, ObjectId.DeathBlock)); // replaces green with 
				
				if(red == 255 && green == 216 && blue == 0) addObject(new Coin(xx*32, yy*32, 0, ObjectId.Coin)); // replaces yellow with "coin" image
				
				if(red == 125 && green == 55 && blue == 15) addObject(new Goomba(xx*32, yy*32, 0, this, ObjectId.Enemy)); // replaces brown with "goombas"
				
				if(red == 0 && green == 0 && blue == 255)  addObject(new Player(xx*32, yy*32, this, cam, ObjectId.Player)); // replaces blue with "Alex"
				
				if(red == 0 && green == 127 && blue == 14)  addObject(new Flag(xx*32, yy*32, ObjectId.Flag)); // replaces dark green with 
			}
		}
		
	}
	
	public void switchLevel() {
		clearLevel();
		cam.setX(0);
		
		
		switch(Game.LEVEL) {
		case 1:
			LoadImageLevel(level2);
			break;
		}
	}
	
	private void clearLevel() {
		object.clear();
	}
	
	public void addObject(GameObject object) {
		this.object.add(object);
	}
	
	public void removeObject(GameObject object) {
		this.object.remove(object);
	}
	
		
}
